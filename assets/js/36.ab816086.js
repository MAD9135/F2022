(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{552:function(e,t,a){"use strict";a.r(t);var o=a(43),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("PageHeader"),e._v(" "),a("h2",{attrs:{id:"production-builds"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#production-builds"}},[e._v("#")]),e._v(" Production Builds")]),e._v(" "),a("p",[e._v("Expo makes it very easy for developers to build and test their apps. A simple "),a("code",[e._v("yarn start")]),e._v(" on the command line begins\nthe Metro build and gives you a QR code to scan with any phone that has the "),a("code",[e._v("Expo Go")]),e._v(" client app installed.")]),e._v(" "),a("p",[e._v("Hot reloading is included with Expo which means you can edit and test continually.")]),e._v(" "),a("blockquote",[a("p",[e._v("But what about your client?")])]),e._v(" "),a("blockquote",[a("p",[e._v("What about testing when your dev server is not running?")])]),e._v(" "),a("blockquote",[a("p",[e._v("What about testing when you are away from your wi-fi network?")])]),e._v(" "),a("p",[e._v("To answer these concerns we have a few options.")]),e._v(" "),a("h3",{attrs:{id:"expo-publish"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expo-publish"}},[e._v("#")]),e._v(" Expo publish")]),e._v(" "),a("p",[e._v("With the Expo CLI we can create a hosted version of our React Native App. This will still be using the Expo app as the\ndelivery mechanism. Your client will still need to install the Expo app on their phone. However, it will create a URL\nthat you can share with your client or other developers for testing. The URL, once opened in a browser will have the QR\ncode that gets used by the Expo Go app to load the currently published version of your app.")]),e._v(" "),a("p",[e._v("You must first create an account with "),a("a",{attrs:{href:"https://expo.dev",target:"_blank",rel:"noopener noreferrer"}},[e._v("Expo"),a("OutboundLink")],1),e._v(". Then you can use the CLI to create this production\nversion.")]),e._v(" "),a("p",[e._v("You can find out if you are logged in from the CLI by using the "),a("code",[e._v("expo whoami")]),e._v(" command. If not logged in then you can use\nthe "),a("code",[e._v("expo login")]),e._v(" command.")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("expo "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("whoami")]),e._v("\nexpo login\nexpo publish\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[a("a",{attrs:{href:"https://docs.expo.dev/workflow/expo-cli/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here is the Expo CLI reference"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("On the Expo website you will have a page where you can see all the different builds you create. Eg:\n"),a("code",[e._v("https://expo.dev/accounts/[your username]/builds")])]),e._v(" "),a("p",[e._v("Clicking on one of your listed builds will take you to the details page, where you can download the "),a("code",[e._v(".aab")]),e._v(" Android\nApplication Bundle file or "),a("code",[e._v(".ipa")]),e._v(" iOS App Store Package file.")]),e._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[e._v("iOS Warning It is important to note that you must have owner rights on your iOS dev account to be able to")]),e._v(" "),a("p",[e._v("create your signing certificate and actually create the downloadable "),a("code",[e._v(".ipa")]),e._v(" file for iOS. :::")]),e._v(" "),a("h4",{attrs:{id:"from-the-metro-dev-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from-the-metro-dev-server"}},[e._v("#")]),e._v(" From the Metro Dev Server")]),e._v(" "),a("p",[e._v("If you have your Metro bundler running through "),a("code",[e._v("expo start")]),e._v(" then you can visit your Metro webpage\n"),a("code",[e._v("http://localhost:19002")]),e._v(" and click on the "),a("code",[e._v("Publish or republish project")]),e._v(" link in the left hand menu.")]),e._v(" "),a("p",[e._v("This will let you do the same thing as with the "),a("code",[e._v("expo publish")]),e._v(" command.")]),e._v(" "),a("p",[e._v("It will open up the Expo.dev service page for your app. You will need to be logged in to the Expo website to do the\npublishing. This page will have a QR code that can be scanned with a phone, which will need the Expo Go app installed.\nThat phone will be able to run the published version of the app at any time. You won't have to have your Metro Dev\nserver running on your computer.")]),e._v(" "),a("p",[e._v("For iOS, there is a security restriction. To load the published app via Expo Go, the user must be logged in to the Expo\naccount that was used to build the app. If you are logged in to the Expo.dev website then you will have a page that you\ncan access from anywhere to demo your published app.")]),e._v(" "),a("p",[e._v("If your intention is to share the app with a client, this leaves us with the following options:")]),e._v(" "),a("ul",[a("li",[e._v("Create an account for your client and log in to that account on your computer before you publish the app to Expo.dev.")]),e._v(" "),a("li",[e._v("Give your client your Expo credentials so that they can log in to the website and then open the app on their phone.")])]),e._v(" "),a("h3",{attrs:{id:"expo-build"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expo-build"}},[e._v("#")]),e._v(" Expo Build")]),e._v(" "),a("p",[e._v("If you want to create the binaries locally from your Expo project you can also run the "),a("code",[e._v("expo build")]),e._v(" command.")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("expo build:android\nexpo build:ios\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("It has the same limitations for iOS. You need to have the owner rights on the iOS account.")]),e._v(" "),a("h3",{attrs:{id:"eas-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eas-cli"}},[e._v("#")]),e._v(" EAS-CLI")]),e._v(" "),a("p",[e._v("A new solution for publishing and creating your mobile binaries has been created with a tool called "),a("strong",[e._v("Expo Application\nServices")]),e._v(".")]),e._v(" "),a("p",[a("strong",[e._v("EXPO")]),e._v(" and "),a("strong",[e._v("EAS")]),e._v(" is designed to run in a manner similar to Cordova and PhoneGap. One is the free public tool. The\nother is aimed at enterprise clients who need more support and more robust tools. Luckily "),a("strong",[e._v("EAS")]),e._v(" comes with a free\nlevel account. Great for students and independent developers.")]),e._v(" "),a("p",[e._v("It uses the node package "),a("code",[e._v("eas-cli")]),e._v(". You start by installing it globally on your computer using "),a("code",[e._v("npm")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -g eas-cli\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("a",{attrs:{href:"https://blog.expo.dev/introducing-eas-395d4809cc6f",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here is an article"),a("OutboundLink")],1),e._v(" about how EAS works and what it does.")]),e._v(" "),a("p",[e._v("It also has the login and whoami commands.")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("eas "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("whoami")]),e._v("\neas login\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("With "),a("strong",[e._v("EAS")]),e._v(" you will be creating the binaries for your project without the same\n"),a("a",{attrs:{href:"https://blog.expo.dev/expo-managed-workflow-in-2021-5b887bbf7dbb",target:"_blank",rel:"noopener noreferrer"}},[e._v("limitations that expo build"),a("OutboundLink")],1),e._v(" had.")]),e._v(" "),a("p",[e._v("It still has the restriction about iOS and needed the distribution p12 certificate, which only the iOS dev account owner\ncan create.")]),e._v(" "),a("h3",{attrs:{id:"expo-eject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expo-eject"}},[e._v("#")]),e._v(" Expo Eject")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("expo publish")]),e._v(" command creates that link for the demo version of your app. Both the "),a("code",[e._v("expo")]),e._v(" and "),a("code",[e._v("eas")]),e._v(" build commands\nwill create binaries (only if you have the distribution certificate for iOS).")]),e._v(" "),a("p",[e._v("One of the things that makes Expo a great development tool is the fact that is skips having the "),a("code",[e._v("ios")]),e._v(" and "),a("code",[e._v("android")]),e._v("\nfolders with the real mobile app project. The downside is that you don't have the mobile app project to open inside of\nXCode or Android Studio. This means that you don't have access to those tools to add native modules or push to devices\nwithout signed certificates.")]),e._v(" "),a("p",[e._v("That is why we have the "),a("code",[e._v("expo eject")]),e._v(" command.")]),e._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[e._v("This command cannot be undone. When the command runs it will put your project back to the same state it would")]),e._v(" "),a("p",[e._v("be right after running "),a("code",[e._v("expo init")]),e._v(" :::")]),e._v(" "),a("p",[e._v("Before running this command, be sure to "),a("code",[e._v("git add -A")]),e._v(" and "),a("code",[e._v("git commit")]),e._v(" all your changes.")]),e._v(" "),a("p",[e._v("Then create a new branch where you will do the ejecting.")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout -b ejected\nexpo "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("eject")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("You will get prompted to enter a package name for Android and bundle identifier for iOS. Use the same name in reverse\ndomain name format. Eg: "),a("code",[e._v("com.algonquincollege.myusername.myapp")]),e._v(" Just like for Cordova.")]),e._v(" "),a("p",[e._v("This will create the "),a("code",[e._v("/ios")]),e._v(" and "),a("code",[e._v("/android")]),e._v(" folders and set up your projects as if you had started with\n"),a("code",[e._v("npx react-native init MyProject")]),e._v(".")]),e._v(" "),a("p",[e._v("Cocoapods must be installed for this to work. See\n"),a("a",{attrs:{href:"https://mad9135.github.io/F2021/modules/week11/01-hello-react-native/#react-native-without-expo",target:"_blank",rel:"noopener noreferrer"}},[e._v("week 11.1"),a("OutboundLink")],1),e._v(" for the\nnotes on the non-expo setup.")]),e._v(" "),a("p",[e._v("It will take a while but you will have your React Native app along with the ios and android versions that can be opened\nin XCode or Android Studio.")]),e._v(" "),a("p",[e._v("There may be a few native tools missing so, after the eject command is done running, run this:")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("npx @react-native-community/cli doctor\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("It will review the tools that you have installed and tell you about any issues to fix. Then it gives you the options to\nfix the problems. Sometimes it can be easier to manual fix the problems by doing the updates and installs through XCode,\nnpm, or Android Studio SDK manager.")]),e._v(" "),a("p",[e._v("Then, to build your app you can use the command:")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("npx react-native start\nnpx react-native run-ios\nnpx react-native run-android\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("The "),a("code",[e._v("start")]),e._v(" command can be run first to build the JS part of the project and start the Metro bundler.")]),e._v(" "),a("p",[e._v("Both the run commands will build your app and try to launch it in the emulator/simulator.")]),e._v(" "),a("blockquote",[a("p",[e._v("It is worth noting that if you have a JDK version 17 installed, it will not like your React Native project and you\nwill get lots of Gradle build errors.")])]),e._v(" "),a("p",[e._v("For Android, the Emulator should be running first or you can have a physical device connected via USB. After the run\ncommand is done you will have your "),a("code",[e._v("apk")]),e._v(" file that you can install and run on a phone. For android, look inside\n"),a("code",[e._v("/android/app/outputs/apk/debug/")]),e._v(" for the "),a("code",[e._v("app-debug.apk")]),e._v(" file. This is the file that you can install and run just like\nyou would for Cordova.")]),e._v(" "),a("p",[e._v("For iOS there may be dependencies that are not linked to the project. You can fix this by running:")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" ios\npod "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("To Open and Run the iOS version from XCode, open the "),a("code",[e._v("/ios/[APP NAME].xcworkspace")]),e._v(" file in XCode and then you can run\nthe app from there. This can install and launch your app on any attached and signed device.")]),e._v(" "),a("blockquote",[a("p",[e._v("NOTE: Not the .xcodeproj file but the .xcworkspace file.")])]),e._v(" "),a("p",[e._v("Remember to select the project in the workspace, go to the "),a("code",[e._v("Signing & Capabilities")]),e._v(" tab, select the\n"),a("code",[e._v("Algonquin College (Media and Design)")]),e._v(" team from the dropdown list and have "),a("code",[e._v("Automatically manage signing")]),e._v(" checked.")]),e._v(" "),a("p",[e._v("The run button in XCode can build and launch the App on your device. If you change your JS code then use the\n"),a("code",[e._v("npx react-native start")]),e._v(" command to update the JS part of the project before doing another build and run from XCode.")]),e._v(" "),a("p",[e._v("Sometimes additional work has to be done removing things that were added with Expo. Honestly, it is often easier to\ncreate a new project with "),a("code",[e._v("npx react-native init MyProject")]),e._v(" and then copy over your JS files and assets into the new\nproject, than to Eject from expo and fix things.")]),e._v(" "),a("h3",{attrs:{id:"firebase-app-distribution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#firebase-app-distribution"}},[e._v("#")]),e._v(" Firebase App Distribution")]),e._v(" "),a("p",[e._v("Another way to deliver test versions of your app to your client is through Firebase.")]),e._v(" "),a("p",[e._v("Firebase has a section in the control panel called "),a("code",[e._v("Android")]),e._v(". It lets you upload the "),a("code",[e._v(".ipa")]),e._v(", "),a("code",[e._v(".apk")]),e._v(" or "),a("code",[e._v(".aab")]),e._v(" files,\ncreate a list of allowed users (by email address), and then distribute those files via an email.")]),e._v(" "),a("p",[e._v("The person receiving the email will get BOTH the binary file for the app, plus a signed certificate from Firebase that\nlets the person run your mobile app.")]),e._v(" "),a("p",[e._v("For iOS it means being able to provide clients with beta versions of your app without dealing with the App Store.")]),e._v(" "),a("p",[e._v("For both iOS and Android it means your client feels safe because they are getting to install a signed application on\ntheir device.")]),e._v(" "),a("p",[e._v("Every time you do an updated version upload to Firebase, the users in the list will automatically be sent an email with\na link to the updated app.")]),e._v(" "),a("p",[e._v("Obviously this doesn't work for general distribution to the public because you need an email address for each person who\nwill download the app. However, it might work for something like an internal app for a small company that had fewer than\n100 employees.")])])])],1)}),[],!1,null,null,null);t.default=n.exports}}]);